# copied from https://www.kenmuse.com/blog/implementing-docker-layer-caching-in-github-actions/

name: Docker Build
on:
  push:
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
          
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},mode=max
          cache-to: type=inline,mode=max
      # - name: Tailscale
      #   uses: tailscale/github-action@v2
      #   with:
      #     oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
      #     oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
      #     tags: tag:ci
      # - name: SSH Remote Commands
      #   shell: bash
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t alex@alexbot 'cd alex-bot && docker compose pull && docker compose up -d'